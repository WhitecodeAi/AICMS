version: '3.8'

services:
  # Main MySQL server for tenant databases
  mysql-server:
    image: mysql:8.0
    container_name: cms-mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: root_secure_password
      MYSQL_USER: cms_admin
      MYSQL_PASSWORD: cms_admin_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d
    ports:
      - "3306:3306"
    networks:
      - cms-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Dedicated MySQL database for enterprise tenant (example)
  tenant-enterprise-db:
    image: mysql:8.0
    container_name: cms-tenant-enterprise-db
    environment:
      MYSQL_ROOT_PASSWORD: enterprise_root_password
      MYSQL_DATABASE: tenant_enterprise
      MYSQL_USER: tenant_enterprise
      MYSQL_PASSWORD: enterprise_secure_password
    volumes:
      - enterprise_db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - cms-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: cms-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - cms-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main CMS application
  cms-app:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: cms-app
    environment:
      # MySQL server connection for creating tenant databases
      DB_HOST: mysql-server
      DB_PORT: 3306
      MYSQL_ROOT_PASSWORD: root_secure_password
      MYSQL_ADMIN_USER: cms_admin
      MYSQL_ADMIN_PASSWORD: cms_admin_password

      # Redis connection
      REDIS_URL: redis://redis:6379

      # Multi-tenant configuration
      TENANT_STRATEGY: dedicated  # dedicated databases only
      TENANT_DEFAULT: demo

      # Security
      SYSTEM_JWT_SECRET: your-super-secure-jwt-secret-change-in-production
      NEXTAUTH_SECRET: your-nextauth-secret-change-in-production
      NEXTAUTH_URL: http://localhost:3000

      # Environment
      NODE_ENV: development
      
    ports:
      - "3000:3000"
    depends_on:
      mysql-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../:/app
      - /app/node_modules
      - tenant_configs:/app/config/tenants
    networks:
      - cms-network
    command: npm run dev:multi-tenant

  # Nginx proxy for subdomain routing
  nginx-proxy:
    image: nginx:alpine
    container_name: cms-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/sites-available
      - nginx_logs:/var/log/nginx
    depends_on:
      - cms-app
    networks:
      - cms-network

  # Database administration tool
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: cms-phpmyadmin
    environment:
      PMA_HOST: mysql-server
      PMA_USER: cms_admin
      PMA_PASSWORD: cms_admin_password
      MYSQL_ROOT_PASSWORD: root_secure_password
    ports:
      - "8080:80"
    depends_on:
      - mysql-server
    networks:
      - cms-network

volumes:
  mysql_data:
  enterprise_db_data:
  redis_data:
  tenant_configs:
  nginx_logs:

networks:
  cms-network:
    driver: bridge

# Additional tenant databases can be added as needed
# Example for adding more tenant databases:
#
#  tenant-acme-db:
#    image: mysql:8.0
#    container_name: cms-tenant-acme-db
#    environment:
#      MYSQL_ROOT_PASSWORD: acme_root_password
#      MYSQL_DATABASE: tenant_acme
#      MYSQL_USER: tenant_acme
#      MYSQL_PASSWORD: acme_secure_password
#    volumes:
#      - acme_db_data:/var/lib/mysql
#    ports:
#      - "3308:3306"
#    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#    networks:
#      - cms-network
